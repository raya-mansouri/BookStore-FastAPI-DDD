version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres_db
    env_file: .env  # Load environment variables from .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  rabbitmq:
    image: "rabbitmq:management"
    container_name: rabbitmq
    env_file: .env
    environment:
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    ports:
      - "15672:15672"  # RabbitMQ Web UI
      - "5672:5672"    # RabbitMQ AMQP port
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis_db
    env_file: .env  # Load environment variables from .env
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  redisinsight:
    image: redis/redisinsight:latest
    container_name: redisinsight
    ports:
      - "5540:5540"
    volumes:
      - redisinsight_data:/data
    networks:
      - app-network
    depends_on:
      - redis

  # mongodb:
  #   image: mongo:latest
  #   container_name: mongodb_db
  #   env_file: .env  # Load environment variables from .env
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
  #     MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - mongodb_data:/data/db
  #   networks:
  #     - app-network

  # app:
  #   build: .
  #   container_name: fastapi_app
  #   env_file: .env  # Load environment variables from .env
  #   environment:
  #     - POSTGRES_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
  #     - REDIS_URL=redis://redis:6379
  #     - MONGO_URL=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb:27017
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - ./src:/app  # Mount the src directory to /app in the container
  #   depends_on:
  #     - postgres
  #     - redis
  #     # - mongodb
  #   networks:
  #     - app-network

volumes:
  postgres_data:
  redis_data:
  mongodb_data:
  redisinsight_data:
  rabbitmq_data:



networks:
  app-network:
    driver: bridge


